server.port=${PORT:0}
spring.application.name=users-service
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true

# assign an unique instance id to each running instance - in order to let every running instance be able to register with eureka service
# otherwise, only 1 instance can register with eureka discovery service
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# enable h2 console
spring.h2.console.enabled=true
# enable connections from other addresses
spring.h2.console.settings.web-allow-others=true


# MySQL properties
spring.datasource.url=jdbc:mysql://localhost:3306/photo_app?serverTimezone=UTC
spring.datasource.username=weilyu
spring.datasource.password=weilyu
spring.jpa.hibernate.ddl-auto=update

# self-defined property values
gateway.ip=192.168.0.10
# 864000000 ms = 10 days
token.expiration_time=864000000
# need to generate this secret properly later
token.secret=secret
# user login url
login.url.path=/users/login

# self-defined property to test bus-refresh actuator endpoint
users.tag=local

# default rabbitmq info
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# expose actuator endpoints
management.endpoints.web.exposure.include=mappings

logging.level.com.weilyu.photoapp.photoappusersservice.data.AlbumsServiceFeignClient=DEBUG

# enable Feign Hystrix Circuit Breaker
feign.hystrix.enabled=true

#spring.zipkin.base-url=http://localhost:9411
#spring.zipkin.sender.type=web
## 100% of the sleuth info will be sent over to zipkin -> 10% === 0.1
#spring.sleuth.sampler.probability=1

logging.file.name=users-service.log


